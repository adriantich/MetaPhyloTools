% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edenetwork_percolation.R
\name{edenetwork_percolation}
\alias{edenetwork_percolation}
\title{Calculate Percolation Threshold for Ecological Networks}
\usage{
edenetwork_percolation(diss)
}
\arguments{
\item{diss}{A distance matrix representing dissimilarities between nodes}
}
\value{
A list containing:
\describe{
  \item{graph}{The original igraph object}
  \item{S_list}{Vector of S values for each threshold}
  \item{critical_distance}{The critical distance at percolation threshold}
}
}
\description{
Calculates the percolation threshold for ecological networks by identifying 
the critical distance at which the network fragments into small components.
This function implements the percolation analysis described in EDENetworks.
}
\details{
Percolation threshold is defined as follows in the original reference:
from

Arnaud-Haond et al. EDENetworks: Ecological and Evolutionary Networks.

Percolation threshold: When links are removed from a connected network, it
eventually fragments into small components. The point where this happens 
is called the percolation threshold. More accurately, this is the point
where the so-called giant component (whose size is of the order of the 
network size) disappears and there is no long-range connectivity; even 
before the percolation threshold small disconnected fragments will appear,
yet a substantial fraction of nodes belongs to the giant component.
The precise location of this percolation point is made using the definition
classically proposed for finite systems (Stauffer and Aharony, 1994) by 
calculating the average proposed for finite systems (Stauffer and 
Aharony, 1994) by calculating the average size of the clusters excluding
the largest one:

S = sum{s<Smax}(s^2ns)

as a function of the last distance value removed, thr, and identifying the 
critical distance with the one at which <S>* has a maximum. N is the total
number of nodes not included in the largest cluster and ns is the number 
of clusters containing s nodes.
}
\examples{
# Create example distance matrix
dist_mat <- as.matrix(dist(iris[1:10, 1:4]))
result <- edenetwork_percolation(dist_mat)
print(result$critical_distance)

}
\references{
Arnaud-Haond et al. EDENetworks: Ecological and Evolutionary Networks. 
\url{https://www.researchgate.net/profile/Sophie-Arnaud-Haond/publication/268433406_EDENetworks_Ecological_and_Evolutionary_Networks/links/54f705a30cf28d6dec9c7ad8/EDENetworks-Ecological-and-Evolutionary-Networks.pdf}
}
